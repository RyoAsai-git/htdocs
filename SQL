SELECT * FROM my_items;
*全てという意味

//書き方は２通り
INSERT INTO my_items SET id=1, item_name = 'いちご', price = 200
INSERT INTO my_items (id, item_name, price) VALUE ('1', 'りんご', '200');

UPDATE my_items SET price=180 WHERE id=1;
UPDATE my_items SET price=150 
//whereがないとデータが全て置き換わる　whereでどこをいじるか指定

DELETE FROM my_items WHERE id =1;
DELETE FROM my_items
//whereがないとデータが全て消される

ユニークキー
idが重複することでデータとして破綻してしまう
プライマリーキー (主キー)

idは基本的にプライマリーキー設定　必ず設定すべき
重複をerror

オートインクリメント 	AUTO_INCREMENT
自動的に加算するカラム

idをいちいち入力しなくても良い
データを削除するとその番号は永久欠番になる
データベースはリレーションの関係もあり、また新しいデータに同じ番号を割り振るとなんのデータかわからなくなるリスク
データベースは基本的に削除した番号は使われない

intは21億以上のデータを管理できる
それ以上はBIGINTで管理9999兆より上まで管理できる
それ以上はプライマリキーを二つ持たせる　
永久欠番は気にしない

WHEREの使い方
SELECT * FROM my_items WHERE id=2;
SELECT * FROM my_items WHERE price=180;
SELECT * FROM my_items WHERE item_name='いちご'
SELECT * FROM my_items WHERE price < 180
SELECT * FROM my_items WHERE keyword LIKE '%甘い%'
// %の部分はなんでも良い keywordカラムの'甘い'という言葉の前はなんでも良い
SELECT * FROM my_items WHERE keyword LIKE '赤い%'
//先頭一致　最初に'赤い'から始まるkeywordを検索
SELECT * FROM my_items WHERE keyword LIKE '%赤い'
//後方一致 最後が'赤い'になるkeywordを検索
SELECT * FROM my_items WHERE price >= 100 AND price < 150
SELECT * FROM my_items WHERE id= 1 OR id=3


データ型
YEAR　年だけ
DATE 年月日
DATETIME 年月日時分秒
TIME　時分秒
TIMESTAMP on_update_CURRENT_TIMESTAMP そのデータをいつ作り、いつ保存したか記録　外部ユーザーが編集するデータに適用すべき

計算　集計　演算用
SELECT SUM(price) FROM my_items
SELECT MAX(price) FROM my_items
SELECT MIN(price) FROM my_items
SELECT COUNT(price) FROM my_items 個数
SELECT AVG(price) FROM my_items　平均値

テーブルからカラムを削除m
ALTER TABLE makers DROP COLUMN maker_id

リレーション
SELECT * FROM makers, my_items WHERE my_items.id=1 AND makers.id=my_items.maker_id
SELECT * FROM makers, my_items //全ての情報
//リレーションを組みたい場合 リレーションを組みたいテーブルをカンマで繋ぐ
//WHERE以降 検索したいカラム
SELECT * FROM makers, my_items WHERE id=1 AND makers.id=my_items.maker_id
//WHERE以降が idだけだとmakers　my_itemsどっちのidかわからなくなりエラー
//そうならないためにどのテーブルのidかをドットで繋いで明示する
//AND maker_idがmy_itemsのmaker_idと一致しているかを示す
//これがリレーションをつける実際の条件
//my_itemsというテーブルにmaker_idというカラムを作り、そこに生産者のidを入れている  リレーションをデータベースに教えてあげる